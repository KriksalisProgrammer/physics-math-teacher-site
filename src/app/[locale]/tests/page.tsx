'use client';

import React, { useState } from 'react';
import { useDictionary } from '@/lib/useDictionary';
import useAuth from '@/hooks/useAuth';
import { useRouter } from 'next/navigation';
import { useNotifications } from '@/hooks/useNotifications';

export const dynamic = 'force-dynamic';

const TestCard = ({ test, onStart }: { test: any; onStart: (id: string) => void }) => (
  <div className="bg-white rounded-xl border border-gray-200 p-6 shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1">
    <div className="flex items-start justify-between mb-4">
      <div className="flex items-center space-x-3">
        <div className="w-12 h-12 bg-gradient-to-r from-blue-500 to-purple-600 rounded-xl flex items-center justify-center">
          <span className="text-white text-xl">{test.icon}</span>
        </div>
        <div>
          <h3 className="text-lg font-semibold text-gray-900">{test.title}</h3>
          <p className="text-sm text-gray-500">{test.subject}</p>
        </div>
      </div>
      <div className={`px-3 py-1 rounded-full text-xs font-medium ${
        test.difficulty === 'easy' ? 'bg-green-100 text-green-700' :
        test.difficulty === 'medium' ? 'bg-yellow-100 text-yellow-700' :
        'bg-red-100 text-red-700'
      }`}>
        {test.difficulty === 'easy' ? '–õ–µ–≥–∫–∏–π' :
         test.difficulty === 'medium' ? '–°–µ—Ä–µ–¥–Ω—ñ–π' : '–°–∫–ª–∞–¥–Ω–∏–π'}
      </div>
    </div>
    
    <p className="text-gray-600 mb-4">{test.description}</p>
    
    <div className="flex items-center justify-between text-sm text-gray-500 mb-4">
      <span>‚è±Ô∏è {test.duration} —Ö–≤</span>
      <span>‚ùì {test.questions} –ø–∏—Ç–∞–Ω—å</span>
      <span>‚≠ê {test.maxScore} –±–∞–ª—ñ–≤</span>
    </div>
    
    <button
      onClick={() => onStart(test.id)}
      className="w-full bg-gradient-to-r from-blue-500 to-purple-600 text-white py-3 rounded-xl font-semibold hover:from-blue-600 hover:to-purple-700 transition-all duration-300 transform hover:scale-105"
    >
      –ü–æ—á–∞—Ç–∏ —Ç–µ—Å—Ç
    </button>
  </div>
);

export default function TestsPage() {
  const { dictionary, locale } = useDictionary();
  const { isAuthenticated, loading: authLoading } = useAuth();
  const { showSuccess, showInfo } = useNotifications();
  const router = useRouter();
  const [selectedCategory, setSelectedCategory] = useState('all');

  // Mock data for tests
  const tests = [
    {
      id: '1',
      title: '–û—Å–Ω–æ–≤–∏ –º–µ—Ö–∞–Ω—ñ–∫–∏',
      subject: '–§—ñ–∑–∏–∫–∞',
      description: '–¢–µ—Å—Ç –Ω–∞ –∑–Ω–∞–Ω–Ω—è –æ—Å–Ω–æ–≤–Ω–∏—Ö –∑–∞–∫–æ–Ω—ñ–≤ –º–µ—Ö–∞–Ω—ñ–∫–∏, —Å–∏–ª —Ç–∞ —Ä—É—Ö—É.',
      difficulty: 'easy',
      duration: 15,
      questions: 10,
      maxScore: 100,
      icon: '‚ö°',
      category: 'physics'
    },
    {
      id: '2',
      title: '–ö–≤–∞–Ω—Ç–æ–≤–∞ –º–µ—Ö–∞–Ω—ñ–∫–∞',
      subject: '–§—ñ–∑–∏–∫–∞',
      description: '–ü–æ–≥–ª–∏–±–ª–µ–Ω–∏–π —Ç–µ—Å—Ç –Ω–∞ —Ä–æ–∑—É–º—ñ–Ω–Ω—è –ø—Ä–∏–Ω—Ü–∏–ø—ñ–≤ –∫–≤–∞–Ω—Ç–æ–≤–æ—ó —Ñ—ñ–∑–∏–∫–∏.',
      difficulty: 'hard',
      duration: 30,
      questions: 15,
      maxScore: 150,
      icon: 'üî¨',
      category: 'physics'
    },
    {
      id: '3',
      title: '–ê–ª–≥–µ–±—Ä–∞ —Ç–∞ —Ä—ñ–≤–Ω—è–Ω–Ω—è',
      subject: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞',
      description: '–¢–µ—Å—Ç –Ω–∞ –≤–∏—Ä—ñ—à–µ–Ω–Ω—è –∞–ª–≥–µ–±—Ä–∞—ó—á–Ω–∏—Ö —Ä—ñ–≤–Ω—è–Ω—å —Ç–∞ —Å–∏—Å—Ç–µ–º.',
      difficulty: 'medium',
      duration: 20,
      questions: 12,
      maxScore: 120,
      icon: 'üßÆ',
      category: 'math'
    },
    {
      id: '4',
      title: '–ì–µ–æ–º–µ—Ç—Ä—ñ—è',
      subject: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞',
      description: '–ó–∞–≤–¥–∞–Ω–Ω—è –Ω–∞ –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –ø–ª–æ—â, –æ–±\'—î–º—ñ–≤ —Ç–∞ –≥–µ–æ–º–µ—Ç—Ä–∏—á–Ω–∏—Ö —Ñ—ñ–≥—É—Ä.',
      difficulty: 'medium',
      duration: 25,
      questions: 14,
      maxScore: 140,
      icon: 'üìê',
      category: 'math'
    }
  ];

  const categories = [
    { id: 'all', name: '–í—Å—ñ —Ç–µ—Å—Ç–∏', icon: 'üìö' },
    { id: 'physics', name: '–§—ñ–∑–∏–∫–∞', icon: '‚ö°' },
    { id: 'math', name: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', icon: 'üßÆ' }
  ];

  const filteredTests = selectedCategory === 'all' 
    ? tests 
    : tests.filter(test => test.category === selectedCategory);

  const handleStartTest = (testId: string) => {
    const test = tests.find(t => t.id === testId);
    showInfo(
      '–¢–µ—Å—Ç —Ä–æ–∑–ø–æ—á–∞—Ç–æ!', 
      `–†–æ–∑–ø–æ—á–∏–Ω–∞—î–º–æ —Ç–µ—Å—Ç "${test?.title}". –£–¥–∞—á—ñ!`,
      3000
    );
    // –¢—É—Ç –±—É–¥–µ –ª–æ–≥—ñ–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥—É –¥–æ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
    // router.push(`/${locale}/tests/${testId}`);
  };

  // Redirect if not authenticated
  if (!authLoading && !isAuthenticated) {
    router.push(`/${locale}/login`);
    return null;
  }

  if (authLoading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center">
        <div className="animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600"></div>
      </div>
    );
  }

  return (
    <main className="min-h-screen bg-gradient-to-br from-gray-50 to-blue-50">
      <div className="container mx-auto px-4 py-8">
        
        {/* Header */}
        <div className="mb-8">
          <div className="flex items-center justify-between">
            <div>
              <h1 className="text-4xl font-bold text-gray-900 mb-2">
                üß™ –¢–µ—Å—Ç–∏ —Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∑–Ω–∞–Ω—å
              </h1>
              <p className="text-gray-600 text-lg">
                –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Å–≤–æ—ó –∑–Ω–∞–Ω–Ω—è —Ç–∞ –æ—Ç—Ä–∏–º–∞–π—Ç–µ –º–∏—Ç—Ç—î–≤–∏–π –∑–≤–æ—Ä–æ—Ç–Ω–∏–π –∑–≤'—è–∑–æ–∫
              </p>
            </div>
            <div className="text-right">
              <div className="text-sm text-gray-500">–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å</div>
              <div className="text-2xl font-bold text-blue-600">76%</div>
            </div>
          </div>
        </div>

        {/* Stats */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
          <div className="bg-white rounded-xl p-6 shadow-lg border border-gray-200">
            <div className="flex items-center justify-between">
              <div>
                <div className="text-sm text-gray-500">–ü—Ä–æ–π–¥–µ–Ω–æ —Ç–µ—Å—Ç—ñ–≤</div>
                <div className="text-2xl font-bold text-blue-600">12</div>
              </div>
              <div className="text-3xl">‚úÖ</div>
            </div>
          </div>
          
          <div className="bg-white rounded-xl p-6 shadow-lg border border-gray-200">
            <div className="flex items-center justify-between">
              <div>
                <div className="text-sm text-gray-500">–°–µ—Ä–µ–¥–Ω—ñ–π –±–∞–ª</div>
                <div className="text-2xl font-bold text-green-600">87</div>
              </div>
              <div className="text-3xl">üìà</div>
            </div>
          </div>
          
          <div className="bg-white rounded-xl p-6 shadow-lg border border-gray-200">
            <div className="flex items-center justify-between">
              <div>
                <div className="text-sm text-gray-500">–ß–∞—Å—É –≤–∏—Ç—Ä–∞—á–µ–Ω–æ</div>
                <div className="text-2xl font-bold text-purple-600">4.2–≥</div>
              </div>
              <div className="text-3xl">‚è±Ô∏è</div>
            </div>
          </div>
          
          <div className="bg-white rounded-xl p-6 shadow-lg border border-gray-200">
            <div className="flex items-center justify-between">
              <div>
                <div className="text-sm text-gray-500">–†—ñ–≤–µ–Ω—å –∑–Ω–∞–Ω—å</div>
                <div className="text-2xl font-bold text-orange-600">–î–æ–±—Ä–µ</div>
              </div>
              <div className="text-3xl">üéØ</div>
            </div>
          </div>
        </div>

        {/* Categories */}
        <div className="mb-8">
          <div className="flex space-x-4 overflow-x-auto pb-2">
            {categories.map((category) => (
              <button
                key={category.id}
                onClick={() => setSelectedCategory(category.id)}
                className={`flex items-center space-x-2 px-6 py-3 rounded-xl font-semibold whitespace-nowrap transition-all duration-300 ${
                  selectedCategory === category.id
                    ? 'bg-blue-600 text-white shadow-lg'
                    : 'bg-white text-gray-600 hover:bg-blue-50 border border-gray-200'
                }`}
              >
                <span className="text-lg">{category.icon}</span>
                <span>{category.name}</span>
              </button>
            ))}
          </div>
        </div>

        {/* Tests Grid */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8">
          {filteredTests.map((test) => (
            <TestCard key={test.id} test={test} onStart={handleStartTest} />
          ))}
        </div>

        {/* Empty State */}
        {filteredTests.length === 0 && (
          <div className="text-center py-16">
            <div className="text-6xl mb-4">üìù</div>
            <h3 className="text-xl font-semibold text-gray-900 mb-2">
              –¢–µ—Å—Ç—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ
            </h3>
            <p className="text-gray-600">
              –°–ø—Ä–æ–±—É–π—Ç–µ –æ–±—Ä–∞—Ç–∏ —ñ–Ω—à—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –∞–±–æ –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ
            </p>
          </div>
        )}
      </div>
    </main>
  );
}
